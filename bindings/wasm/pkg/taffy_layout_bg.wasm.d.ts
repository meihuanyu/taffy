/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_layout_free(a: number, b: number): void;
export function __wbg_get_layout_width(a: number): number;
export function __wbg_get_layout_height(a: number): number;
export function __wbg_get_layout_x(a: number): number;
export function __wbg_get_layout_y(a: number): number;
export function __wbg_get_layout_childCount(a: number): number;
export function layout_child(a: number, b: number): number;
export function __wbg_taffytree_free(a: number, b: number): void;
export function taffytree_new(): number;
export function __wbg_node_free(a: number, b: number): void;
export function node_new(a: number): number;
export function node_setMeasure(a: number, b: number): void;
export function node_addChild(a: number, b: number): void;
export function node_removeChild(a: number, b: number): void;
export function node_replaceChildAtIndex(a: number, b: number, c: number): void;
export function node_removeChildAtIndex(a: number, b: number): void;
export function node_markDirty(a: number): void;
export function node_isDirty(a: number): number;
export function node_childCount(a: number): number;
export function node_computeLayout(a: number, b: number): number;
export function node_getDisplay(a: number, b: number): void;
export function node_setDisplay(a: number, b: number, c: number): void;
export function node_getPosition(a: number, b: number): void;
export function node_setPosition(a: number, b: number, c: number): void;
export function node_getOverflowX(a: number, b: number): void;
export function node_setOverflowX(a: number, b: number, c: number): void;
export function node_getOverflowY(a: number, b: number): void;
export function node_setOverflowY(a: number, b: number, c: number): void;
export function node_setOverflow(a: number, b: number, c: number): void;
export function node_setScrollbarWidth(a: number, b: number, c: number): void;
export function node_setInsetTop(a: number, b: number, c: number, d: number): void;
export function node_setInsetBottom(a: number, b: number, c: number, d: number): void;
export function node_setInsetLeft(a: number, b: number, c: number, d: number): void;
export function node_setInsetRight(a: number, b: number, c: number, d: number): void;
export function node_setInsetHorizontal(a: number, b: number, c: number, d: number): void;
export function node_setInsetVertical(a: number, b: number, c: number, d: number): void;
export function node_setInsetAll(a: number, b: number, c: number, d: number): void;
export function node_setWidth(a: number, b: number, c: number, d: number): void;
export function node_setHeight(a: number, b: number, c: number, d: number): void;
export function node_setMinWidth(a: number, b: number, c: number, d: number): void;
export function node_setMinHeight(a: number, b: number, c: number, d: number): void;
export function node_setMaxWidth(a: number, b: number, c: number, d: number): void;
export function node_setMaxHeight(a: number, b: number, c: number, d: number): void;
export function node_setAspectRatio(a: number, b: number, c: number, d: number): void;
export function node_setPaddingTop(a: number, b: number, c: number, d: number): void;
export function node_setPaddingBottom(a: number, b: number, c: number, d: number): void;
export function node_setPaddingLeft(a: number, b: number, c: number, d: number): void;
export function node_setPaddingRight(a: number, b: number, c: number, d: number): void;
export function node_setPaddingHorizontal(a: number, b: number, c: number, d: number): void;
export function node_setPaddingVertical(a: number, b: number, c: number, d: number): void;
export function node_setPaddingAll(a: number, b: number, c: number, d: number): void;
export function node_setMarginTop(a: number, b: number, c: number, d: number): void;
export function node_setMarginBottom(a: number, b: number, c: number, d: number): void;
export function node_setMarginLeft(a: number, b: number, c: number, d: number): void;
export function node_setMarginRight(a: number, b: number, c: number, d: number): void;
export function node_setMarginHorizontal(a: number, b: number, c: number, d: number): void;
export function node_setMarginVertical(a: number, b: number, c: number, d: number): void;
export function node_setMarginAll(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthTop(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthBottom(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthLeft(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthRight(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthHorizontal(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthVertical(a: number, b: number, c: number, d: number): void;
export function node_setBorderWidthAll(a: number, b: number, c: number, d: number): void;
export function node_setRowGap(a: number, b: number, c: number, d: number): void;
export function node_setColumnGap(a: number, b: number, c: number, d: number): void;
export function node_setGap(a: number, b: number, c: number, d: number): void;
export function node_setAlignContent(a: number, b: number, c: number): void;
export function node_setJustifyContent(a: number, b: number, c: number): void;
export function node_setAlignItems(a: number, b: number, c: number): void;
export function node_setJustifyItems(a: number, b: number, c: number): void;
export function node_setAlignSelf(a: number, b: number, c: number): void;
export function node_setJustifySelf(a: number, b: number, c: number): void;
export function node_setFlexDirection(a: number, b: number, c: number): void;
export function node_setFlexWrap(a: number, b: number, c: number): void;
export function node_setFlexGrow(a: number, b: number, c: number): void;
export function node_setFlexShrink(a: number, b: number, c: number): void;
export function node_setFlexBasis(a: number, b: number, c: number, d: number): void;
export function node_setGridAutoFlow(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_exn_store(a: number): void;
